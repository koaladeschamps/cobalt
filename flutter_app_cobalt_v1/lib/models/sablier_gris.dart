import 'package:flutter/material.dart';
import 'package:flutter_app_cobalt_v1/helpers/svg/svg.dart';
import 'package:flutter_app_cobalt_v1/helpers/transform/transform.dart';


/* Frame emojione-v1:hourglass-not-done
    Autogenerated by FlutLab FTF Generator
  */
class GeneratedIcone_sablierWidget extends StatelessWidget {
  
  final Color color;

   GeneratedIcone_sablierWidget(
    this.color,
  );

  @override
  Widget build(BuildContext context) {
    return  TransformHelper.rotate(
       /* a: 1.00,
        b: -0.00,
        c: 0.00,
        d: -1.00,*/
        child:ClipRRect(
      borderRadius: BorderRadius.zero,
      child: Container(
        width: 136.0,
        height: 133.0,
        color: Color.fromARGB(255, 246, 245, 251),
        child: Stack(
            fit: StackFit.expand,
            alignment: Alignment.center,
            clipBehavior: Clip.none,
            children: [
              Positioned(
                left: 30.382814407348633,
                top: 5.546515464782715,
                right: null,
                bottom: null,
                width: 69.14033508300781,
                height: 120.608154296875,
                child: GeneratedVerre_sablierWidget(),
              ),
              Positioned(
                left: 30.37218475341797,
                top: 5.340780735015869,
                right: null,
                bottom: null,
                width: 37.83059310913086,
                height: 120.83048248291016,
                child: GeneratedOmbreSablierWidget(),
              ),
              Positioned(
                left: 35.27924728393555,
                top: 85,
                right: null,
                bottom: null,
                width: 59.37887191772461,
                height: 72.71359252929688,
                child: GeneratedSableWidget(this.color),
              ),
              Positioned(
                left: 25.5,
                top: 0.0,
                right: null,
                bottom: null,
                width: 78.90125274658203,
                height: 132.4451446533203,
                child: GeneratedBase_sablierWidget(),
              )
            ]),
      ),
    ),
    );
  }
}


class GeneratedIcone_sablier_bleuWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {

    return ClipRRect(
      borderRadius: BorderRadius.zero,
      child: Container(
        width: 136.0,
        height: 133.0,
        color: Color.fromARGB(255, 246, 245, 251),
              
        child: Stack(
            fit: StackFit.expand,
            alignment: Alignment.center,
            clipBehavior: Clip.none,
            children: [
              Positioned(
                left: 30.382814407348633,
                top: 5.546515464782715,
                right: null,
                bottom: null,
                width: 69.14033508300781,
                height: 120.608154296875,
                child: GeneratedVerre_sablierWidget(),
              ),
              Positioned(
                left: 30.37218475341797,
                top: 5.340780735015869,
                right: null,
                bottom: null,
                width: 37.83059310913086,
                height: 120.83048248291016,
                child: GeneratedOmbreSablierWidget(),
              ),
              Positioned(
                left: 36.0,
                    top: 10.0,
                    right: null,
                    bottom: null,
                    width: 57.374996185302734,
                    height: 96.0,
                child: GeneratedSableBleuWidget(),
              ),
              Positioned(
                left: 25.5,
                top: 0.0,
                right: null,
                bottom: null,
                width: 78.90125274658203,
                height: 132.4451446533203,
                child: GeneratedBase_sablierWidget(),
              )
            ]),
      ),
        
    );
  }
}

class GeneratedVerre_sablierWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      width: 69.14033508300781,
      height: 120.608154296875,
      child: SvgWidget(painters: [
        SvgPathPainter.fill()
          ..addPath(
              'M52.2669 71.9883C46.9842 70.0141 47.0586 67.8342 45.1206 65.7124C45.1737 65.6875 45.2204 65.648 45.2204 65.5399L44.9208 65.4838C43.3207 63.6551 42.7087 61.8658 42.6343 60.3051C42.7108 58.7361 43.3207 56.9552 44.9208 55.1243L45.2204 55.0641C45.2204 54.9623 45.1758 54.9207 45.1206 54.8916C47.0586 52.7657 46.9821 50.5878 52.2669 48.6157C73.0558 40.8476 68.7739 0 68.7739 0L0.363812 0C0.363812 0 -3.90744 40.8476 16.8666 48.6157C22.1578 50.5961 22.0792 52.7719 24.0172 54.8916C23.9598 54.9207 23.9216 54.9602 23.9216 55.0641L24.2212 55.1243C25.8064 56.9552 26.4291 58.7361 26.5077 60.3051C26.4291 61.8658 25.8043 63.6551 24.2212 65.4838L23.9216 65.5399C23.9216 65.648 23.9598 65.6875 24.0172 65.7124C22.0792 67.8404 22.1578 70.0204 16.8666 71.9883C-3.91381 79.7626 0.363812 120.608 0.363812 120.608L68.7739 120.608C68.7739 120.608 73.0664 79.7626 52.2669 71.9883Z')
          ..color = Color.fromARGB(255, 233, 221, 198),
      ]),
    );
  }
}


class GeneratedOmbreSablierWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      width: 37.83059310913086,
      height: 120.83048248291016,
      child: SvgWidget(painters: [
        SvgPathPainter.fill()
          ..addPath(
              'M30.1499 72.1941C35.4327 70.2198 33.8177 67.7552 35.7493 65.6334L36.0192 63.6675C37.6087 61.8388 34.5019 62.0653 34.5806 60.5046C34.5019 58.9356 39.0834 57.1547 37.4961 55.3238L37.2007 55.2636C37.2007 55.1617 37.2389 55.1202 37.2921 55.0911C35.3541 52.9652 35.4327 50.7873 30.1499 48.8152C9.36106 41.0471 23.7813 0 23.7813 0L0.363813 0.197422C0.363813 0.197422 -3.90744 41.045 16.8666 48.8131C22.1578 50.7935 22.0792 52.9693 24.0172 55.089C23.9598 55.1181 23.9216 55.1576 23.9216 55.2615L24.2212 55.3218C25.8064 57.1526 26.4291 58.9335 26.5077 60.5025C26.4291 62.0632 25.8043 63.8525 24.2212 65.6812L23.9216 65.7373C23.9216 65.8454 23.9598 65.8849 24.0172 65.9098C22.0792 68.0378 22.1578 70.2178 16.8666 72.1857C-3.91381 79.96 0.363813 120.806 0.363813 120.806L21.4311 120.83C21.4311 120.83 9.35044 79.9621 30.1393 72.1878')
          ..color = Color.fromARGB(255, 213, 185, 141),
      ]),
    );
  }
}

class GeneratedSableWidget extends StatelessWidget {
    
    final Color color;

   GeneratedSableWidget(
    this.color,
  );

  @override
  Widget build(BuildContext context) {
    return  TransformHelper.rotate(
        a: 1.00,
        b: -0.00,
        c: 0.00,
        d: -1.00,
        child:Container(
      width: 59.37887191772461,
      height: 72.71359252929688,
      child: SvgWidget(painters: [
        SvgPathPainter.fill()
          ..addPath(
              'M59.1175 62.5349C58.7924 46.9407 43.7261 44.5737 43.7261 44.5737L43.7346 44.5737C33.5091 43.5159 31.6625 32.2795 31.3395 27.4915C31.4479 8.06104 49.589 0 49.589 0L9.79413 0C9.79413 0 27.9353 8.06104 28.0436 27.4915C27.7185 32.2795 25.874 43.5159 15.6443 44.5737C15.6443 44.5737 0.584377 46.9407 0.246502 62.5266L0 72.7136L59.3789 72.7136L59.1366 62.5349')
          ..color = this.color,
      ]),
    ),
    );
  }
}

class GeneratedSableBleuWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return TransformHelper.rotate(
        a: 1.00,
        b: -0.00,
        c: 0.00,
        d: 1.00,
        child: Container(
          width: 57.374996185302734,
          height: 96.0,
          child: SvgWidget(painters: [
            SvgPathPainter.fill()
              ..addPath(
                  'M57.375 96C56.004 80.5986 43.2124 73.8495 43.2124 73.8495C34.6011 72.0878 30.6071 60.7485 30.2924 53.6279C30.398 24.7316 38.5 0 38.5 0L19.5 0C19.5 0 26.4372 24.7316 26.5428 53.6279C26.226 60.7485 21.7219 71.5871 12.6157 73.8495C12.6157 73.8495 0 82.6011 0 95.9876L57.375 96Z')
              ..color = Color.fromARGB(255, 27, 66, 125),
          ]),
        ));
  }
}

class GeneratedBase_sablierWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      width: 78.90125274658203,
      height: 132.4451446533203,
      child: SvgWidget(painters: [
        SvgPathPainter.fill()
          ..addPath(
              'M78.9013 3.56606C78.9013 5.54236 77.078 7.14252 74.8446 7.14252L4.06088 7.14252C1.82113 7.14252 7.54952e-15 5.54236 7.54952e-15 3.56606C3.77476e-15 1.59808 1.82113 0 4.06088 0L74.8446 0C77.0759 0 78.9013 1.59808 78.9013 3.56606ZM78.9013 128.885C78.9013 130.843 77.078 132.445 74.8446 132.445L4.06088 132.445C1.82113 132.445 7.54952e-15 130.843 7.54952e-15 128.885C7.54952e-15 126.909 1.82113 125.307 4.06088 125.307L74.8446 125.307C77.0759 125.307 78.9013 126.907 78.9013 128.885Z')
          ..color = Color.fromARGB(255, 1, 9, 14),
      ]),
    );
  }
}

 //pour rotation

  class _RotationTransitionSablier extends StatefulWidget {
    final Color color;

    _RotationTransitionSablier(
      this.color,
    );
    
    _RotationTransitionExampleSablierState createState() => _RotationTransitionExampleSablierState(this.color);
  }
  
  class _RotationTransitionExampleSablierState extends State<_RotationTransitionSablier> with TickerProviderStateMixin {
    final Color color;

    _RotationTransitionExampleSablierState(
      this.color,
    );

    late AnimationController _controller;
    late Animation<double> _animation;
  
    initState() {
      super.initState();
      _controller = AnimationController(
          duration: const Duration(milliseconds: 600),
          reverseDuration: const Duration(milliseconds: 600),
          vsync: this,
          value: 0,
          lowerBound: 0.1,
          upperBound: 0.5
      );
      
      _animation = CurvedAnimation(parent: _controller, curve: Curves.linear);
      
      _controller.forward();
      
    }
  
    @override
    dispose() {
      _controller.dispose();
      //_controller.reverse();
      super.dispose();
    }
  
    Widget build(BuildContext context) {
      return Scaffold(
          
          body: Container(
          child :Center(
          
          child: RotationTransition(
            turns: _animation,
            alignment: Alignment(0, 0),
            child: GeneratedIcone_sablierWidget(this.color)),
          ),
        ),
      );
      
    }
  }
